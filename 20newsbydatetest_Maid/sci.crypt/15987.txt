from. greg.onufer@eng.sun.com (greg onufer). subject. re. let's build software cryptophones for over the internet.... organization. sun microsystems computer corporation, mtn. view, california. lines. . distribution. usa. nntp posting host. cheers. . in graham toal writes.. >in article hal@cco.caltech.edu (hal finney) writes.. >.i tried this code yesterday. on my sparcstation elc it takes over. >. seconds to compress seconds' worth of speech. this means that it. >.needs to be "optimized" by over a factor of before it will be usable. >.in even a half duplex mode.. . >ouch! thanks for trying it.. . the following program is a very quick hack i created a few months. ago to determine whether a sun sparcstation ipc could perform. real time, full duplex encrypted audio with resulting data rates. sustainable by today's modems.. . this test program reads linearly encoded audio from the audio device,. compresses it with gsm . (compresses frames of bit samples. recorded at khz into bits resulting in a hz frame rate), encrypts. it with des, then reverses the process and sends the reconstructed audio. back to the audio device. the compressed, encrypted audio stream. is kbits/s (!).. . my sparcstation ipc (not exactly a very fast machine these days,. certainly slower than an elc) would just barely sustain this activity. (audio underruns would occcur but the speech was very intelligible). i. ran it as a real time process to get the best results. remember,. though, that this program is a quick hack and the performance can. certainly be improved.. . the audio compression routines can be ftp'd from tub.cs.tu berlin.de,. i believe (look for gsm or toast). i used eric young's des. implementation but i no longer know where i got it from.. . cheers!greg. . . /*. * test program to see how much cpu it takes for secure digital audio.. * written by g. onufer (greg@cheers.bungi.com).. *. * written on a sun ipc running solaris . with a sun isdn s bus card. * and a speakerbox.. */. #include . #include . #include . #include . #include . #include . #include . . #include . #include . . boolean t. svs audio init(int fd, audio info t *prev info). {. audio info t info;. . if (prev info != null) {. if (ioctl(fd, audio getinfo, prev info) .